diff -rup binutils.orig/gas/config/obj-elf.c binutils-2.27/gas/config/obj-elf.c
--- binutils.orig/gas/config/obj-elf.c	2019-01-08 13:52:32.758716536 +0000
+++ binutils-2.27/gas/config/obj-elf.c	2019-01-08 15:05:34.705763638 +0000
@@ -78,9 +78,11 @@ static void obj_elf_gnu_attribute (int);
 static void obj_elf_tls_common (int);
 static void obj_elf_lcomm (int);
 static void obj_elf_struct (int);
+static void obj_elf_attach_to_group (int);
 
 static const pseudo_typeS elf_pseudo_table[] =
 {
+  {"attach_to_group", obj_elf_attach_to_group, 0},
   {"comm", obj_elf_common, 0},
   {"common", obj_elf_common, 1},
   {"ident", obj_elf_ident, 0},
@@ -980,6 +982,27 @@ obj_elf_section_name (void)
   return name;
 }
 
+static void
+obj_elf_attach_to_group (int dummy ATTRIBUTE_UNUSED)
+{
+  const char * gname = obj_elf_section_name ();
+
+  if (gname == NULL)
+    {
+      as_warn ("group name not parseable");
+      return;
+    }
+
+  if (elf_group_name (now_seg))
+    {
+      as_warn ("already has a group");
+      return;
+    }
+
+  elf_group_name (now_seg) = xstrdup (gname);
+  elf_section_flags (now_seg) |= SHF_GROUP;
+}
+
 void
 obj_elf_section (int push)
 {
diff -rup binutils.orig/gas/doc/as.texinfo binutils-2.27/gas/doc/as.texinfo
--- binutils.orig/gas/doc/as.texinfo	2019-01-08 13:52:32.766716472 +0000
+++ binutils-2.27/gas/doc/as.texinfo	2019-01-08 15:05:34.707763621 +0000
@@ -4312,6 +4312,7 @@ Some machine configurations provide addi
 * Altmacro::                    @code{.altmacro}
 * Ascii::                       @code{.ascii "@var{string}"}@dots{}
 * Asciz::                       @code{.asciz "@var{string}"}@dots{}
+* Attach_to_group::             @code{.attach_to_group @var{name}}
 * Balign::                      @code{.balign @var{abs-expr} , @var{abs-expr}}
 * Bundle directives::           @code{.bundle_align_mode @var{abs-expr}}, etc
 * Byte::                        @code{.byte @var{expressions}}
@@ -4603,6 +4604,12 @@ trailing zero byte) into consecutive add
 @code{.asciz} is just like @code{.ascii}, but each string is followed by
 a zero byte.  The ``z'' in @samp{.asciz} stands for ``zero''.
 
+@node Attach_to_group
+@section @code{.attach_to_group @var{name}}
+Attaches the current section to the named group.  This is like declaring
+the section with the @code{G} attribute, but can be done after the section
+has been created.
+
 @node Balign
 @section @code{.balign[wl] @var{abs-expr}, @var{abs-expr}, @var{abs-expr}}
 
